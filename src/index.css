.ruby {
  position: absolute;
  bottom: 175px;
  right: 430px;
  filter: drop-shadow(0 0 0.5rem #37dea4);
  will-change: filter;
  transition: filter 0.2s ease-out;
  animation: MoveUpDown 6s ease-in-out infinite;
  rotate: 60deg;
  opacity: 0.8;
}
@keyframes MoveUpDown {
  0%,
  100% {
    bottom: 175px;
    filter: drop-shadow(0 0 0.4rem #37dea49f);
  }
  50% {
    bottom: 190px;
    filter: drop-shadow(0 0 0.75rem #37dea49f);
  }
}

.fileCoin {
  opacity: 0.8;
  position: absolute;
  top: 175px;
  left: 450px;
  will-change: filter;
  transition: filter 0.2s ease-out;
  animation: MoveUpDown2 10s ease-in-out infinite;
  scale: 1.2;
  transform: skew(5deg) rotate(2deg);
  -webkit-transform: skew(5deg) rotate(2deg);
  -moz-transform: skew(5deg) rotate(2deg);
}

@keyframes MoveUpDown2 {
  0%,
  100% {
    top: 140px;
    transform: skew(5deg) rotate(2deg);
  }
  50% {
    top: 175px;
    transform: skew(0deg) rotate(2deg);
  }
}

@media screen and (max-width: 900px) {
  .ruby {
    display: none;
  }
  .fileCoin {
    display: none;
  }
}

/* Skeleton CSS */

@keyframes react-loading-skeleton {
  100% {
    transform: translateX(100%);
  }
}

.react-loading-skeleton {
  --base-color: #ebebeb;
  --highlight-color: #f5f5f5;
  --animation-duration: 1.5s;
  --animation-direction: normal;
  --pseudo-element-display: block; /* Enable animation */

  background-color: var(--base-color);

  width: 100%;
  border-radius: 0.25rem;
  display: inline-flex;
  line-height: 1;

  position: relative;
  overflow: hidden;
  z-index: 1; /* Necessary for overflow: hidden to work correctly in Safari */
}

.react-loading-skeleton::after {
  content: ' ';
  display: var(--pseudo-element-display);
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 100%;
  background-repeat: no-repeat;
  background-image: linear-gradient(90deg, var(--base-color), var(--highlight-color), var(--base-color));
  transform: translateX(-100%);

  animation-name: react-loading-skeleton;
  animation-direction: var(--animation-direction);
  animation-duration: var(--animation-duration);
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

/* ENDS */
